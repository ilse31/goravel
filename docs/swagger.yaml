definitions:
  models.ResponseUserLogin:
    properties:
      token:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - password
    type: object
  models.UserRequest:
    properties:
      address:
        type: string
      avatar:
        type: string
      city:
        type: string
      country:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      last_login:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      status:
        type: string
    required:
    - name
    - password
    - phone_number
    type: object
  response.ErrorResponse:
    properties:
      error_code:
        type: string
      message:
        type: string
      success:
        example: false
        type: boolean
    type: object
  response.Response:
    properties:
      data: {}
      message:
        example: success
        type: string
      success:
        example: true
        type: boolean
    type: object
info:
  contact: {}
paths:
  /swagger:
    get:
      consumes:
      - application/json
      description: Description
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Summary
      tags:
      - example
  /users:
    get:
      consumes:
      - application/json
      description: get users
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Per Page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.UserRequest'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Show all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: User data
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserRequest'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserRequest'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Show user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserRequest'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: User data
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ResponseUserLogin'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login user
      tags:
      - users
swagger: "2.0"
